name: CI

env: 
  PUSH_STATUS: ❌
  BUILD_STATUS: ❌
  PROJECT_NAME:    PointCloudSegmentation
  BUILD_DIR:       docker-env
  DOCKER_REP_NAME: point_cloud_segmentation
on:
  release:
    types: [published]
  push:
    branches: [ dev, master ]
  pull_request:
    branches: [ master ]

jobs:
  codeStyle:
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@master
    - name: GitHub Action for Flake8
      uses: cclauss/GitHub-Action-for-Flake8@master
      with:
       args: flake8 . --ignore E,F,W --count --show-source --statistics

  build:
    runs-on: ubuntu-latest
    needs: codeStyle
    steps:
    - uses: actions/checkout@v2
      name: Actions git repo
      continue-on-error: true
    - name: Docker login
      run: |
        docker login -u ${{ secrets.DOCKER_HUB_LOGIN }} -p ${{ secrets.DOCKER_HUB_PASSWORD }} docker.io
      continue-on-error: true
    - name: Generate build number
      uses: einaregilsson/build-number@v2 
      with:
        token: ${{secrets.GIT_TOKEN}}        
    - name: Print new build number
      run: echo "Build number is $BUILD_NUMBER"
    - name: Docker build
      id: build
      run: |
        ls
        docker build -t ${{ secrets.DOCKER_HUB_LOGIN }} $BUILD_DIR/
        docker tag ${{ secrets.DOCKER_HUB_LOGIN }} ${{ secrets.DOCKER_HUB_LOGIN }}/$DOCKER_REP_NAME:ver_$BUILD_NUMBER
        docker images
      continue-on-error: true
    - name: Set environment variables build
      uses: allenevans/set-env@v1.0.0
      if: steps.build.outcome == 'Success'
      with:
        BUILD_STATUS: ✅
    - name: Docker push
      id: push
      run: |
        docker push ${{ secrets.DOCKER_HUB_LOGIN }}/$DOCKER_REP_NAME:ver_$BUILD_NUMBER
      continue-on-error: true
    - name: Set emoji push
      id: emoji
      run: echo ::set-env name=output::yellow
    - name: Set environment variables push
      uses: allenevans/set-env@v1.0.0
      if: steps.push.outcome == 'Success'
      with:
        PUSH_STATUS: ✅
    - uses: appleboy/telegram-action@master
      name: Notification to Telegram
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          The ${{ github.event_name }} event from ${{ github.actor }}. 
          ${{ env.PROJECT_NAME }} build status: ${{ steps.build.outcome }} ${{ env.BUILD_STATUS }}. Build number: ${{ env.BUILD_NUMBER }}. ${{ env.PROJECT_NAME }} push to docker hub status: ${{ steps.push.outcome }} ${{ env.PUSH_STATUS }}. Name build: ${{ env.DOCKER_REP_NAME }}:ver_${{ env.BUILD_NUMBER }}.
